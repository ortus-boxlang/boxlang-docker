name: Pull Request

on:
  push:
    branches-ignore:
      - "main"
      - "master"
      - "development"
  pull_request:
    branches:
      - development

env:
    DOCKER_IMAGE: ortussolutions/boxlang
    BOXLANG_VERSION: latest

jobs:
  pr-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Alpine builds
          # Note: No JDK builders currently support alpine with ARM
          - BUILD_IMAGE_DOCKERFILE: builds/alpine/Base.Dockerfile
            BUILD_IMAGE_TAG: cli
          - BUILD_IMAGE_DOCKERFILE: builds/alpine/Base.Web.Dockerfile
            BUILD_IMAGE_TAG: miniserver
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Setup Builds
        id: setup
        env:
          DOCKER_IMAGE: ortussolutions/boxlang
          BUILD_IMAGE_TAG: ${{ matrix.BUILD_IMAGE_TAG }}
        run: |
          TAGS="${DOCKER_IMAGE}:${BUILD_IMAGE_TAG}"

          if [[ ${BUILD_IMAGE_TAG} == *"alpine"* ]]; then
            ARCH_PLATFORMS=linux/amd64
          else
            ARCH_PLATFORMS=linux/amd64,linux/arm64/v8
          fi

          # Set output parameters.
          echo "arch_platforms=${ARCH_PLATFORMS}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${TAGS}" >> $GITHUB_ENV

      - name: Build Test Image
        uses: docker/build-push-action@v5
        env:
          DOCKER_BUILDKIT: 1
        with:
          provenance: false
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ matrix.BUILD_IMAGE_DOCKERFILE }}
          build-args: BOXLANG_VERSION=${{ env.boxlang_version }}
          platforms: ${{ env.arch_platforms }}
          push: false
          tags: ${{ env.IMAGE_TAG }}
